# The isolate flag marks processes that should be isolated in some way. Threshold and reason
# values defines how: If threshold is not set or is set to value lower than 1, the process will
# be normally scheduled. Scheduler rules will be responsible for isolating it (or not).
#
# If threshold is set to value 1 or greater, process will be handled by Isolate filter in
# zz_isolate.lua rule:
#
# threshold=1                Not scheduled but cleaned up before ulatencyd exits (e.g. moved to
#                            root cgroup)
# threshold=2 or greater     Not scheduled and not cleaned up before ulatencyd exists.
#
# reason="" or not set       No isolation cgroup will be created, process will stay in its
#                            origin cgroup.
# reason="<reason>"          Process will be moved to /iso_<reason> cgroup of each subsystem
#                            defined in cgroups.conf. CGroup parameters may be defined in
#                            Isolate filter (zz_isolate.lua).
#
#
# Example:
# If you have a process which creates own private cgroups and if moved it will fail to find them,
# use: isolate threshold=2 (without reason)



################################################################################
# isolate ulatencyd
################################################################################

ulatencyd               isolate threshold=1 reason=ulatency instant=1 inherit=1

# Do not specify reason for ulatencyd release agent because it cannot be moved
# to another cgroup.
# Tested with
# - Linux kernel 3.2  : prevents moving inside cpuset subsystem
# - Linux kernel 3.12 : prevents moving inside any subsystem
# This is OK as long as every release agent initial cgroups are all /

cmd:/bin/sh\ */ulatencyd_cleanup.sh\ /*   isolate threshold=1 inherit=1


################################################################################
# isolate libvirtd
################################################################################

/usr/sbin/libvirtd      isolate threshold=2 inherit=1